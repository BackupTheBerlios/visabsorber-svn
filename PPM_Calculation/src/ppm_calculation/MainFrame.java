/*
 * MainFrame.java
 *
 * Created on 26. Oktober 2006, 00:40
 */

package ppm_calculation;

import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Graphics;
import java.io.File;
import javax.swing.*;
/**
 *
 * @author  Jan-Stefan Fischer
 */

public class MainFrame extends javax.swing.JFrame {
    
    Matrix MatrixA, MatrixL, MatrixR, VectorB, MatrixCholesky, VectorY, VectorX, VectorBFailure, VectorAbsFailure, VectorRelFailure;
    String failure=null;
    int operation=0;
    int LR=1;
    int CHOLESKY=2;
    class MyCanvas extends Canvas {
        public void paint(Graphics g) {
            
            MatrixA.drawMatrix(this,0,0, "Matrix A");
            VectorB.drawMatrix(this,90*MatrixA.x+50,0, "Vektor B");
            if (failure==null) {
                if (operation==LR) {
                    MatrixL.drawMatrix(this,0,45+20*MatrixA.y, "Matrix L");
                    MatrixR.drawMatrix(this,90*MatrixL.x+50,45+20*MatrixA.y, "Matrix R");
                    VectorY.drawMatrix(this,0 ,90+20*MatrixA.y + 20*MatrixL.y , "Vektor Y");
                    VectorX.drawMatrix(this,90*VectorY.x+50, 90+20*MatrixA.y + 20*MatrixL.y, "Vektor X");
                    VectorBFailure.drawMatrix(this,90*VectorY.x+50 + 90*VectorX.x+50,90+20*MatrixA.y + 20*MatrixL.y, "A*x=b(F)");
                    VectorAbsFailure.drawMatrix(this,90*VectorY.x+50 + 90*VectorX.x+50 + 90*VectorBFailure.x+50,90+20*MatrixA.y + 20*MatrixL.y, "F-Real");
                    VectorRelFailure.drawMatrix(this,90*VectorY.x+50 + 90*VectorX.x+50 + 90*VectorBFailure.x+50 + 90*VectorAbsFailure.x+50,90+20*MatrixA.y + 20*MatrixL.y, "F-Relativ");
                }
                if (operation==CHOLESKY) {
                    MatrixCholesky.drawMatrix(this,0,45+20*MatrixA.y, "Matrix L");
                    VectorY.drawMatrix(this,0,90+20*MatrixA.y+20*MatrixCholesky.y, "Vektor Y");
                    VectorX.drawMatrix(this,90*VectorY.x+50,90+20*MatrixA.y+20*MatrixCholesky.y, "Vektor X");
                    VectorBFailure.drawMatrix(this,90*VectorY.x+50 + 90*VectorX.x+50,90+20*MatrixA.y+20*MatrixCholesky.y, "A*x=b(F)");
                    VectorAbsFailure.drawMatrix(this,90*VectorY.x+50 + 90*VectorX.x+50 + 90*VectorBFailure.x+50,90+20*MatrixA.y + 20*MatrixL.y, "F-Real");
                    //VectorRelFailure.drawMatrix(this,90*VectorY.x+50 + 90*VectorX.x+50 + 90*VectorBFailure.x+50 + 90*VectorAbsFailure.x+50,90+20*MatrixA.y + 20*MatrixL.y, "F-Relativ");
                }
            } else {
                g.drawString("Fehler: "+failure,0,45+20*MatrixA.y);
            }
        }
    }
    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        Calculator calc=new Calculator();
        MatrixA=new Matrix(5,5);
        calc.genHibert_A(MatrixA,12);
        MatrixL=new Matrix(5,5);
        MatrixR=new Matrix(5,5);
        MatrixCholesky=new Matrix(5,5);
        VectorB=new Matrix(1,5);
        VectorY=new Matrix(1,5);
        VectorX=new Matrix(1,5);
        VectorAbsFailure=new Matrix(1,5);
        VectorRelFailure=new Matrix(1,5);
        VectorBFailure=new Matrix(1,5);
        calc.genHibert_B(VectorB,12);
        
        
        /*org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                
                .add(visMatrix, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                )
                .addContainerGap())
                );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                .add(90,90,90)
                .add(visMatrix, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1000, 1000)
                .addContainerGap(40, Short.MAX_VALUE))
                );*/
       
        //jScrollPane1.setViewportView(visMatrix);
        scrollPane1.add(visMatrix);
        visMatrix.setSize(new Dimension(3000,1500));
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonMatrixA = new javax.swing.JButton();
        buttonVectorB = new javax.swing.JButton();
        buttonLR = new javax.swing.JButton();
        buttonCholesky = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        scrollPane1 = new java.awt.ScrollPane();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PPM_Matrix");
        buttonMatrixA.setText("\u00d6ffne Matrix A");
        buttonMatrixA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMatrixAActionPerformed(evt);
            }
        });

        buttonMatrixA.getAccessibleContext().setAccessibleName("buttonMatrixA");

        buttonVectorB.setText("\u00d6ffne Vektor B");
        buttonVectorB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVectorBActionPerformed(evt);
            }
        });

        buttonVectorB.getAccessibleContext().setAccessibleName("buttonVectorB");

        buttonLR.setText("LR-Zerlegung");
        buttonLR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLRActionPerformed(evt);
            }
        });

        buttonCholesky.setText("Cholesky-Zerlegung");
        buttonCholesky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCholeskyActionPerformed(evt);
            }
        });

        jButton1.setText("L-Matrix speichern");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("R-Matrix Speichern");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("X-Vektor speichern");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("L-Matrix speichern");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(scrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(buttonMatrixA)
                            .add(buttonVectorB))
                        .add(25, 25, 25)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(jButton1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton2))
                            .add(buttonLR, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(33, 33, 33)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(buttonCholesky, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(buttonCholesky)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton4))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(layout.createSequentialGroup()
                                    .add(buttonLR)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jButton1)
                                        .add(jButton2)))
                                .add(layout.createSequentialGroup()
                                    .add(buttonMatrixA)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(buttonVectorB))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton5)
                        .add(1, 1, 1)))
                .add(scrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Calculator calc=new Calculator();
        operation=CHOLESKY;
        calc.clacJacobi(MatrixA, VectorB, VectorX, 1000, 0.0000000001);
        //calc.calcLUShort (MatrixA, VectorB, VectorX);
        calc.MatrixMulti(MatrixA, VectorX, VectorBFailure);
        calc.calc_Failure(VectorB, VectorBFailure, VectorAbsFailure, VectorRelFailure);
        /*if (failure==null) {
            failure=calc.calc_YX(MatrixCholesky, VectorB, VectorY,0);
            if (failure==null) {
                failure=calc.calc_YX(MatrixCholesky.transpont(), VectorY, VectorX,1);
                if (failure==null) {
                    calc.MatrixMulti(MatrixA, VectorX, VectorBFailure);
                    calc.calc_Failure(VectorB, VectorBFailure, VectorAbsFailure, VectorRelFailure);
                }
            }
        }*/
        visMatrix.repaint();
    }//GEN-LAST:event_jButton5ActionPerformed

    public void SaveToFile(Matrix matrix) {
        if (failure==null) {
            JFileChooser fileChooser = new JFileChooser(".");
            int status = fileChooser.showSaveDialog(null);
            if (status == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                matrix.saveMatrixToFile(selectedFile);           
            }
        }        
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        SaveToFile(MatrixCholesky);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SaveToFile(VectorX);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SaveToFile(MatrixR);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SaveToFile(MatrixL);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void buttonCholeskyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCholeskyActionPerformed
        Calculator calc=new Calculator();
        operation=CHOLESKY;
        failure=calc.Cholesky(MatrixA, MatrixCholesky);
        if (failure==null) {
            failure=calc.calc_YX(MatrixCholesky, VectorB, VectorY,0);
            if (failure==null) {
                failure=calc.calc_YX(MatrixCholesky.transpont(), VectorY, VectorX,1);
                if (failure==null) {
                    calc.MatrixMulti(MatrixA, VectorX, VectorBFailure);
                    calc.calc_Failure(VectorB, VectorBFailure, VectorAbsFailure, VectorRelFailure);
                }
            }
        }
        visMatrix.repaint();
    }//GEN-LAST:event_buttonCholeskyActionPerformed
    
    private void buttonLRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLRActionPerformed
        Calculator calc=new Calculator();
        operation=LR;
        failure=calc.LRCalc(MatrixA, MatrixR, MatrixL);
        if (failure==null) {
            failure=calc.calc_YX( MatrixL, VectorB, VectorY,0);
            if (failure==null) {
                failure=calc.calc_YX(MatrixR, VectorY, VectorX,1);
                if (failure==null) {
                    calc.MatrixMulti(MatrixA, VectorX, VectorBFailure);
                    calc.calc_Failure(VectorB, VectorBFailure, VectorAbsFailure, VectorRelFailure);
                }
            }
        }
        visMatrix.repaint();
    }//GEN-LAST:event_buttonLRActionPerformed
    
    private void buttonVectorBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVectorBActionPerformed
        JFileChooser fileChooser = new JFileChooser(".");
        int status = fileChooser.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (VectorB.loadVectorFromFile(selectedFile)) {
                visMatrix.repaint();
                //VectorB.drawMatrix(visMatrix,0,0, "Vektor B");
            }
            
        }
    }//GEN-LAST:event_buttonVectorBActionPerformed
    
    private void buttonMatrixAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMatrixAActionPerformed
        JFileChooser fileChooser = new JFileChooser(".");
        int status = fileChooser.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (MatrixA.loadMatrixFromFile(selectedFile)) {
                visMatrix.repaint();
            }
        }
    }//GEN-LAST:event_buttonMatrixAActionPerformed
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCholesky;
    private javax.swing.JButton buttonLR;
    private javax.swing.JButton buttonMatrixA;
    private javax.swing.JButton buttonVectorB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration//GEN-END:variables
    public MyCanvas visMatrix = new MyCanvas();
}
